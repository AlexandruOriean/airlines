% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/etl_extract.R, R/etl_load.R, R/etl_transform.R
\name{etl_extract.etl_airlines}
\alias{etl_extract.etl_airlines}
\alias{etl_init.etl_airlines}
\alias{etl_load.etl_airlines}
\alias{etl_transform.etl_airlines}
\title{ETL functionality for airlines data}
\usage{
\method{etl_extract}{etl_airlines}(obj, years = 2015, months = 1:12, ...)

\method{etl_load}{etl_airlines}(obj, script = FALSE, years = 2015,
  months = 1:12, ...)

\method{etl_init}{etl_airlines}(obj, script = NULL, schema_name = "init",
  pkg = attr(obj, "pkg"), ext = NULL, ...)

\method{etl_transform}{etl_airlines}(obj, years = 2015, months = 1:12, ...)
}
\arguments{
\item{obj}{an \code{\link{etl}} object}

\item{years}{a vector of integers representing the years}

\item{months}{a vector of integers representing the months}

\item{...}{arguments passed to methods}

\item{script}{either a vector of SQL commands to be executed, or
a file path as a character vector containing an SQL initialization script.
If \code{NULL} (the default), then the appropriate built-in
schema will be fetched by \code{\link{find_schema}}, if it exists. Note
that the flavor of SQL in this file must match the type of the source. That is,
if your object is of type \code{\link[dplyr]{src_mysql}}, then make sure that
the schema you specify here is written in MySQL (and not PostgreSQL). Please
note that SQL syntax is not, in general, completely portable. Use with caution, as this may
clobber any existing data you have in an existing database.}

\item{schema_name}{The name of the schema. Default is \code{init}.}

\item{pkg}{The package defining the schema. Should be set in \code{\link{etl}}.}

\item{ext}{The file extension used for the SQL schema file. If NULL (the default) it
be inferred from the \code{src_*} class of \code{con}. For example, if \code{con}
has class \code{\link[dplyr]{src_sqlite}} then \code{ext} will be \code{sqlite}.}
}
\description{
These functions implement \code{etl_airlines} methods
for the core ETL functions defined in \code{\link[etl]{etl}}.
}
\details{
If a \code{year} and/or \code{month} is specified, then
only flight data from matching months is used.
}
\examples{

# SQLite by default
airlines <- etl("airlines")
airlines

\dontrun{
if (require(RMySQL)) {
  # must have pre-existing database "airlines"
  # if not, try
  system("mysql -e 'CREATE DATABASE IF NOT EXISTS airlines;'")
  db <- src_mysql(default.file = path.expand("~/.my.cnf"), group = "client",
                  user = NULL, password = NULL, dbname = "airlines")
}

airlines <- etl("airlines", db, dir = "~/dumps/airlines")
# get two months of data
airlines \%>\%
  etl_extract(year = 2013, months = 5:6) \%>\%
  etl_transform(year = 2013, months = 5:6) \%>\%
  etl_load(year = 2013, months = 6)
src_tbls(airlines)
}

# re-initialize the database with complementary tables
\dontrun{
airlines \%>\%
  etl_init() \%>\%
  etl_load(year = 2013, months = 6)

# Initialize the database and import one month of data
airlines \%>\%
  etl_create(year = 2013, months = 5)
 
 # add another month WITHOUT re-initializing the database
 airlines \%>\%
   etl_update(year = 2013, months = 6)
}

# check the results
\dontrun{
airlines \%>\%
  tbl("flights") \%>\%
  group_by(year, origin) \%>\%
  summarise(N = n(), min_month = min(month), max_month = max(month)) \%>\%
  arrange(desc(N))
}

# delete intermediate files
\dontrun{
airlines \%>\%
  etl_cleanup(delete_load = TRUE)
}
}
\seealso{
\code{\link[etl]{etl}}, \code{\link[etl]{etl_load}}
}

