% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/etl_cleanup.R, R/etl_extract.R, R/etl_load.R, R/etl_transform.R
\name{etl_cleanup.etl_airlines}
\alias{etl_cleanup.etl_airlines}
\alias{etl_extract.etl_airlines}
\alias{etl_load.etl_airlines}
\alias{etl_transform.etl_airlines}
\title{ETL functionality for airlines data}
\usage{
\method{etl_cleanup}{etl_airlines}(obj, delete_zip = FALSE,
  delete_csv = FALSE, ...)

\method{etl_extract}{etl_airlines}(obj, years = 2015, months = 1:12, ...)

\method{etl_load}{etl_airlines}(obj, schema = FALSE, years = 2015,
  months = 1:12, ...)

\method{etl_transform}{etl_airlines}(obj, years = 2015, months = 1:12, ...)
}
\arguments{
\item{obj}{an \code{\link{etl}} object}

\item{delete_zip}{should the ZIP files we downloaded be deleted?}

\item{delete_csv}{should the CSV files we downloaded by deleted?}

\item{...}{arguments passed to methods}

\item{years}{a vector of integers representing the years}

\item{months}{a vector of integers representing the months}

\item{schema}{Either a logical, a filename pointing to SQL schema file, or a character
vector containing the schema itself. If \code{schema = TRUE}, then the built-in
schema will be used. Note
that the flavor of SQL in this file must match the type of the source. That is,
if your object is of type \code{\link[dplyr]{src_mysql}}, then make sure that
the schema you specify here is written in MySQL (and not PostgreSQL). Please
note that SQL syntax is not, in general, completely portable. Use with caution, as this may
clobber any existing data you have in an existing database.}
}
\description{
These functions implement \code{etl_airlines} methods
for the core ETL functions defined in \code{\link[etl]{etl}}.
}
\details{
If a \code{year} and/or \code{month} is specified, then
only flight data from matching months is used.
}
\examples{


# SQLite by default
airlines <- etl("airlines")
str(airlines)

\dontrun{
if (require(RMySQL)) {
  # must have pre-existing database "airlines"
  # if not, try
  system("mysql -e 'CREATE DATABASE IF NOT EXISTS airlines;'")
  db <- src_mysql(default.file = path.expand("~/.my.cnf"), group = "client",
                  user = NULL, password = NULL, dbname = "airlines")
}

airlines <- etl("airlines", db, dir = "~/dumps/airlines")
# get two months of data
airlines \%>\%
  etl_extract(year = 2013, months = 5:6) \%>\%
  etl_transform(year = 2013, months = 5:6) \%>\%
  etl_load(year = 2013, months = 6)
}

# re-initialize the database with complementary tables
\dontrun{
airlines \%>\%
  etl_load(schema = TRUE, year = 2013, months = 6)

# Initialize the database and import one month of data
airlines \%>\%
  etl_create(year = 2013, months = 5)
 
 # add another month WITHOUT re-initializing the database
 airlines \%>\%
   etl_update(year = 2013, months = 6)
}

# check the results
\dontrun{
airlines \%>\%
  tbl("flights") \%>\%
  group_by(year, origin) \%>\%
  summarise(N = n(), min_month = min(month), max_month = max(month)) \%>\%
  arrange(desc(N))
}

# delete intermediate files
\dontrun{
airlines \%>\%
  etl_cleanup(delete_csv = TRUE)
}
}
\seealso{
\code{\link[etl]{etl}}, \code{\link[etl]{etl_load}}
}

